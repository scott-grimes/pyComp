//needs fixing!
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int address;

    /** Initializes the keyboard. */
    function void init() {
    let address = 24576;
    return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
    var char key;
    
    let key = Memory.peek(address);
    
    return key;
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char key;
        while(key=0){
            let key = Keyboard.keyPressed();
        }
        while(Keyboard.keyPressed() = key){
        }
        
        if((key>31) & (key<127)){
            do Output.printChar(key);
        }
        return key;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
    var String input;
    var char nextChar;
    
    let input = String.new(256);
    
    do Output.printString(message);
    
    while(~(nextChar=128)){
        if(nextChar=129){
            do Output.backSpace();
            do input.eraseLastChar();
        }
        if(~(nextChar=0))
        {
            do input.appendChar(nextChar);
        }
        let nextChar = Keyboard.readChar();
    }
    do Output.println();
    return input;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
    var String value;
    let value = Keyboard.readLine(message);
    return value.intValue();
    }
}
